typedef struct trieNode
{
	trieNode* trieNodeArr[26] = {NULL};
	bool isWord = false;
	
}
trieNode;


int asciiToIndex(char)

#inputWordArray[6] = Mason
trieNode* rootTrieNode = (trieNode*)malloc(1);


trieNode* currentTrieNode = rootTrieNode;
trieNode* newTrieNode = NULL;

for (int x = 0; x < strlen(inputWordArray); x++)
{
	arrayPosition = asciiToIndex(inputWordArray[x])
	
	if (currentTrieNode->trieNodeArr[arrayPosition] == NULL)
	{
		newTrieNode = (trieNode*)malloc(1)
		currentTrieNode->trieNodeArr[arrayPosition] = newTrieNode
		
		if (strlen(inputWordArray) - x == 2)
		{
			newTrieNode->isWord = True
		}
	}
	currentTrieNode = newTrieNode
	newTrieNode = NULL
}


int asciiToIndex(char letter)
{
	if (isupper(letter))
	{
		letter = tolower(letter)
	}
	
	return letter - 97
}
